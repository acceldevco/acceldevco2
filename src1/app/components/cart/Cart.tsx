"use client";
import { dataPost } from "../../actions";
import { useQuery } from "@tanstack/react-query";
import axios from "axios";
import React, { useRef } from "react";
import { useInView } from "react-intersection-observer";

function Cart({ key, type, title, content, name, email,file, id }: any) {
  const { ref, inView } = useInView()
  const ref2 = useRef(null);
  return (
    <>
      <dialog ref={ref2} className="bg-red-500 top-0">
        <button 
        // onClick={() => console.log(ref.current.open = false)}
          >
          X
        </button>
        hgfhgfhgfh
      </dialog>
      <div
        key={key}
        className="flex justify-between items-center flex-grow  px-[11px] bg-[#d8d8d8]"
      >
        <div className="flex justify-start items-center flex-grow-0 flex-shrink-0 relative overflow-hidden gap-3 bg-transparent">
          <svg
            width={20}
            height={17}
            viewBox="0 0 11 9"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="flex-grow-0 flex-shrink-0"
            preserveAspectRatio="xMidYMid meet"
            onClick={()=>{dataPost()}}
          >
            <path
              d="M5.47758 6.47385L6.1278 5.82364L5.27578 4.97164L4.62556 5.62185V5.93575H5.16368V6.47385H5.47758ZM7.94395 2.43806C7.88416 2.37827 7.8225 2.38014 7.75897 2.44366L5.79709 4.40551C5.73356 4.46904 5.73169 4.53069 5.79148 4.59048C5.85127 4.65027 5.91293 4.6484 5.97646 4.58488L7.93834 2.62303C8.00187 2.55951 8.00374 2.49785 7.94395 2.43806ZM8.39238 5.76759V6.83259C8.39238 7.27728 8.23449 7.6575 7.91872 7.97326C7.60295 8.28903 7.22272 8.44691 6.77803 8.44691H2.11435C1.66966 8.44691 1.28942 8.28903 0.973655 7.97326C0.657885 7.6575 0.5 7.27728 0.5 6.83259V2.16901C0.5 1.72432 0.657885 1.3441 0.973655 1.02833C1.28942 0.712569 1.66966 0.554688 2.11435 0.554688H6.77803C7.01345 0.554688 7.23206 0.601398 7.43386 0.694819C7.48991 0.720977 7.52354 0.763951 7.53475 0.823741C7.54596 0.887267 7.52915 0.941451 7.4843 0.986293L7.20964 1.26095C7.15732 1.31327 7.09753 1.32821 7.03027 1.30579C6.94432 1.28337 6.86024 1.27216 6.77803 1.27216H2.11435C1.86771 1.27216 1.65658 1.35998 1.48094 1.53561C1.30531 1.71124 1.21749 1.92237 1.21749 2.16901V6.83259C1.21749 7.07922 1.30531 7.29035 1.48094 7.46599C1.65658 7.64162 1.86771 7.72943 2.11435 7.72943H6.77803C7.02466 7.72943 7.2358 7.64162 7.41143 7.46599C7.58707 7.29035 7.67489 7.07922 7.67489 6.83259V6.12633C7.67489 6.07775 7.6917 6.03664 7.72534 6.00301L8.08408 5.64427C8.14013 5.58822 8.20553 5.57514 8.28027 5.60504C8.35501 5.63493 8.39238 5.68912 8.39238 5.76759ZM7.85426 1.6309L9.46861 3.24522L5.70179 7.01196H4.08744V5.39764L7.85426 1.6309ZM10.343 2.3708L9.82735 2.88648L8.213 1.27216L8.7287 0.756477C8.83333 0.651846 8.96039 0.59953 9.10987 0.59953C9.25934 0.59953 9.3864 0.651846 9.49103 0.756477L10.343 1.60848C10.4477 1.71311 10.5 1.84016 10.5 1.98964C10.5 2.13911 10.4477 2.26616 10.343 2.3708Z"
              fill="#003CFF"
            />
          </svg>
          <svg
            width={17}
            height={21}
            viewBox="0 0 11 15"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="flex-grow-0 flex-shrink-0"
            preserveAspectRatio="xMidYMid meet"
            onClick={() => {
              console.log(id, type);
              axios
                .delete(`/api/${type}`, {
                  data: {
                    id: id,
                  },
                })
                .then((d) => {
                  console.log("fsd");
                });
            }}
          >
            <path
              d="M9.80533 5.63839L9.5953 11.9954C9.57741 12.5399 9.34806 13.0559 8.95593 13.434C8.56379 13.8122 8.03975 14.0226 7.49501 14.0206H3.50446C2.96008 14.0226 2.43634 13.8125 2.04426 13.4348C1.65218 13.0571 1.4226 12.5416 1.40417 11.9975L1.19415 5.63839C1.18955 5.49913 1.24046 5.36375 1.33568 5.26203C1.4309 5.16031 1.56263 5.10059 1.70189 5.09599C1.84115 5.09139 1.97653 5.14231 2.07825 5.23753C2.17997 5.33275 2.23969 5.46448 2.24429 5.60373L2.45432 11.9624C2.46478 12.2338 2.58002 12.4906 2.77584 12.6789C2.97165 12.8672 3.23281 12.9723 3.50446 12.9721H7.49501C7.76701 12.9723 8.02847 12.8669 8.22435 12.6782C8.42022 12.4894 8.53523 12.2321 8.54516 11.9603L8.75519 5.60373C8.75978 5.46448 8.81951 5.33275 8.92123 5.23753C9.02295 5.14231 9.15833 5.09139 9.29758 5.09599C9.43684 5.10059 9.56857 5.16031 9.66379 5.26203C9.75901 5.36375 9.80993 5.49913 9.80533 5.63839ZM10.5 3.52287C10.5 3.66213 10.4447 3.79569 10.3462 3.89416C10.2477 3.99263 10.1142 4.04795 9.97493 4.04795H1.02507C0.885814 4.04795 0.75226 3.99263 0.65379 3.89416C0.55532 3.79569 0.5 3.66213 0.5 3.52287C0.5 3.38362 0.55532 3.25006 0.65379 3.15159C0.75226 3.05312 0.885814 2.9978 1.02507 2.9978H2.6528C2.81916 2.99825 2.97975 2.93678 3.1033 2.82537C3.22685 2.71395 3.30452 2.56055 3.32121 2.39502C3.35996 2.00672 3.54188 1.64675 3.83153 1.38526C4.12118 1.12376 4.4978 0.979459 4.88803 0.980474H6.11145C6.50167 0.979459 6.8783 1.12376 7.16795 1.38526C7.45759 1.64675 7.63951 2.00672 7.67826 2.39502C7.69495 2.56055 7.77263 2.71395 7.89618 2.82537C8.01973 2.93678 8.18031 2.99825 8.34668 2.9978H9.9744C10.1137 2.9978 10.2472 3.05312 10.3457 3.15159C10.4442 3.25006 10.4995 3.38362 10.4995 3.52287H10.5ZM4.23274 2.9978H6.76779C6.69879 2.84014 6.65366 2.67309 6.63389 2.50213C6.62089 2.37271 6.5603 2.25272 6.46387 2.16541C6.36745 2.0781 6.24205 2.0297 6.11197 2.02957H4.88855C4.75848 2.0297 4.63308 2.0781 4.53665 2.16541C4.44023 2.25272 4.37964 2.37271 4.36663 2.50213C4.3467 2.67312 4.30192 2.84017 4.23274 2.9978ZM4.76149 10.9532V6.48218C4.76149 6.34292 4.70617 6.20937 4.6077 6.1109C4.50923 6.01243 4.37567 5.95711 4.23641 5.95711C4.09716 5.95711 3.9636 6.01243 3.86513 6.1109C3.76666 6.20937 3.71134 6.34292 3.71134 6.48218V10.9553C3.71134 11.0945 3.76666 11.2281 3.86513 11.3266C3.9636 11.425 4.09716 11.4803 4.23641 11.4803C4.37567 11.4803 4.50923 11.425 4.6077 11.3266C4.70617 11.2281 4.76149 11.0945 4.76149 10.9553V10.9532ZM7.28918 10.9532V6.48218C7.28918 6.34292 7.23386 6.20937 7.13539 6.1109C7.03692 6.01243 6.90337 5.95711 6.76411 5.95711C6.62485 5.95711 6.4913 6.01243 6.39283 6.1109C6.29436 6.20937 6.23904 6.34292 6.23904 6.48218V10.9553C6.23904 11.0945 6.29436 11.2281 6.39283 11.3266C6.4913 11.425 6.62485 11.4803 6.76411 11.4803C6.90337 11.4803 7.03692 11.425 7.13539 11.3266C7.23386 11.2281 7.28918 11.0945 7.28918 10.9553V10.9532Z"
              fill="#FF0000"
            />
          </svg>
          <svg
            width={20}
            height={16}
            viewBox="0 0 11 7"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="flex-grow-0 flex-shrink-0"
            preserveAspectRatio="xMidYMid meet"
            // onClick={() => console.log((ref.current.open = true))}
          >
            <path
              d="M5.5 0.0898438C3.22727 0.0898438 1.28636 1.50348 0.5 3.49893C1.28636 5.49439 3.22727 6.90803 5.5 6.90803C7.775 6.90803 9.71364 5.49439 10.5 3.49893C9.71364 1.50348 7.775 0.0898438 5.5 0.0898438ZM5.5 5.77166C4.24545 5.77166 3.22727 4.75348 3.22727 3.49893C3.22727 2.24439 4.24545 1.22621 5.5 1.22621C6.75455 1.22621 7.77273 2.24439 7.77273 3.49893C7.77273 4.75348 6.75455 5.77166 5.5 5.77166ZM5.5 2.1353C4.74773 2.1353 4.13636 2.74666 4.13636 3.49893C4.13636 4.25121 4.74773 4.86257 5.5 4.86257C6.25227 4.86257 6.86364 4.25121 6.86364 3.49893C6.86364 2.74666 6.25227 2.1353 5.5 2.1353Z"
              fill="black"
            />
          </svg>
        </div>
        <div className="flex justify-center items-center flex-grow-0 flex-shrink-0 relative gap-4 py-1">
          <p className="flex-grow-0 flex-shrink-0 text-left text-black">
            {content || email}
          </p>
          <p className="flex-grow-0 flex-shrink-0 text-left text-black">
            {title || name}
          </p>
          <img src={file} className="flex-grow-0 flex-shrink-0 w-[41px] h-[39px] relative overflow-hidden bg-white" />
        </div>
      </div>{" "}
    </>
  );
}

export default Cart;
